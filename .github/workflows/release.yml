---
name: release

on:
  pull_request:
    types: [ready_for_review]

jobs: 
  build_release:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        map_type: 
          - name: small
            size: 1000
          - name: medium
            size: 5000
          - name: large
            size: 10000
    steps:
      - name: Check out code
        uses: actions/checkout@v3
          
      - name: Install EBPF Packages
        run: |
          sudo apt-get update -qq
          sudo apt-get upgrade -yqq
          sudo apt-get install -y jq gcc clang libc6-dev-i386 libbpfcc-dev libbpf-dev 
          
      - name:  Compile Object file from Source
        run: |
          clang -D BPF_MAX_ENTRIES=${{map_type.size}} -g -O2 -Wall -Wextra -target bpf -c -o files/objects/tproxy_splicer.o src/tproxy_splicer.c
          clang -O2 -Wall -Wextra -o files/objects/map_update src/map_update.c 
          chmod +x files/scripts/tproxy_splicer_startup.sh

      - name: Tar Object File
        run: |
          tar -cvzf tproxy_splicer_${{map_type.name}}.tar.gz --strip-components=1 -C files/ objects scripts services

      - name: Get version
        run: echo "version=`files/objects/map_update -V`" >> $GITHUB_OUTPUT
        id: version

      - name: Create release
        uses: actions/create-release@v1
        id: release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload a built artifact for release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: tproxy_splicer_${{map_type.name}}
          asset_name: tproxy_splicer_${{map_type.name}}
          asset_content_type: application/gzip
